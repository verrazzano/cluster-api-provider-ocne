---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: verrazzanofleetbindings.addons.cluster.x-k8s.io
spec:
  group: addons.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VerrazzanoFleetBinding
    listKind: VerrazzanoFleetBindingList
    plural: verrazzanofleetbindings
    shortNames:
    - vfb
    - vfbs
    singular: verrazzanofleetbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this VerrazzanoFleetBinding belongs
      jsonPath: .spec.clusterRef.name
      name: Cluster
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      priority: 1
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.revision
      name: Revision
      type: string
    - description: Time duration since creation of VerrazzanoFleet
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VerrazzanoFleetBinding is the Schema for the verrazzanofleetbindings
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VerrazzanoFleetBindingSpec defines the desired state of VerrazzanoFleetBinding.
            properties:
              chartName:
                description: 'ChartName is the name of the Helm chart in the repository.
                  e.g. chart-path oci://repo-url/chart-name as chartName: chart-name
                  and https://repo-url/chart-name as chartName: chart-name'
                type: string
              clusterRef:
                description: ClusterRef is a reference to the Cluster to install the
                  Helm release on.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              namespace:
                description: ReleaseNamespace is the namespace the Helm release will
                  be installed on the referenced Cluster. If it is not specified,
                  it will be set to the default namespace.
                type: string
              options:
                description: Options represents the helm setting options which can
                  be used to control behaviour of helm operations(Install, Upgrade,
                  Delete, etc) via options like wait, skipCrds, timeout, waitForJobs,
                  etc.
                properties:
                  atomic:
                    description: Atomic indicates the installation/upgrade process
                      to delete the installation or rollback on failure. If 'Atomic'
                      is set, wait will be enabled automatically during helm install/upgrade
                      operation.
                    type: boolean
                  dependencyUpdate:
                    description: DependencyUpdate indicates the Helm install/upgrade
                      action to get missing dependencies.
                    type: boolean
                  disableHooks:
                    description: DisableHooks prevents hooks from running during the
                      Helm install action.
                    type: boolean
                  disableOpenAPIValidation:
                    description: DisableOpenAPIValidation controls whether OpenAPI
                      validation is enforced.
                    type: boolean
                  install:
                    description: Install represents CLI flags passed to Helm install
                      operation which can be used to control behaviour of helm Install
                      operations via options like wait, skipCrds, timeout, waitForJobs,
                      etc.
                    properties:
                      createNamespace:
                        description: CreateNamespace indicates the Helm install/upgrade
                          action to create the VerrazzanoFleetSpec.ReleaseNamespace
                          if it does not exist yet. On uninstall, the namespace will
                          not be garbage collected. If it is not specified by user,
                          will be set to default 'true'.
                        type: boolean
                      includeCRDs:
                        description: IncludeCRDs determines whether CRDs stored as
                          a part of helm templates directory should be installed.
                        type: boolean
                    type: object
                  options:
                    description: SubNotes determines whether sub-notes should be rendered
                      in the chart.
                    type: boolean
                  skipCRDs:
                    description: SkipCRDs controls whether CRDs should be installed
                      during install/upgrade operation. By default, CRDs are installed
                      if not already present. If set, no CRDs will be installed.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like resource creation, Jobs for hooks, etc.) during
                      the performance of a Helm install action. Defaults to '10 min'.
                    type: string
                  uninstall:
                    description: Uninstall represents CLI flags passed to Helm uninstall
                      operation which can be used to control behaviour of helm Uninstall
                      operation via options like wait, timeout, etc.
                    properties:
                      description:
                        description: Description represents human readable information
                          to be shown on release uninstall.
                        type: string
                      keepHistory:
                        description: KeepHistory defines whether historical revisions
                          of a release should be saved. If it's set, helm uninstall
                          operation will not delete the history of the release. The
                          helm storage backend (secret, configmap, etc) will be retained
                          in the cluster.
                        type: boolean
                    type: object
                  upgrade:
                    description: Upgrade represents CLI flags passed to Helm upgrade
                      operation which can be used to control behaviour of helm Upgrade
                      operations via options like wait, skipCrds, timeout, waitForJobs,
                      etc.
                    properties:
                      cleanupOnFail:
                        description: CleanupOnFail indicates the upgrade action to
                          delete newly-created resources on a failed update operation.
                        type: boolean
                      force:
                        description: Force indicates to ignore certain warnings and
                          perform the helm release upgrade anyway. This should be
                          used with caution.
                        type: boolean
                      maxHistory:
                        description: MaxHistory limits the maximum number of revisions
                          saved per release
                        type: integer
                      recreate:
                        description: Recreate will (if true) recreate pods after a
                          rollback.
                        type: boolean
                      resetValues:
                        description: ResetValues will reset the values to the chart's
                          built-ins rather than merging with existing.
                        type: boolean
                      reuseValues:
                        description: ReuseValues will re-use the user's last supplied
                          values.
                        type: boolean
                    type: object
                  wait:
                    description: Wait enables the waiting for resources to be ready
                      after a Helm install/upgrade has been performed.
                    type: boolean
                  waitForJobs:
                    description: WaitForJobs enables waiting for jobs to complete
                      after a Helm install/upgrade has been performed.
                    type: boolean
                type: object
              releaseName:
                description: ReleaseName is the release name of the installed Helm
                  chart. If it is not specified, a name will be generated.
                type: string
              repoURL:
                description: 'RepoURL is the URL of the Helm chart repository. e.g.
                  chart-path oci://repo-url/chart-name as repoURL: oci://repo-url
                  and https://repo-url/chart-name as repoURL: https://repo-url'
                type: string
              values:
                description: Values is an inline YAML representing the values for
                  the Helm chart. This YAML is the result of the rendered Go templating
                  with the values from the referenced workload Cluster.
                type: string
              version:
                description: Version is the version of the Helm chart. If it is not
                  specified, the chart will use and be kept up to date with the latest
                  version.
                type: string
            required:
            - chartName
            - clusterRef
            - repoURL
            type: object
          status:
            description: VerrazzanoFleetBindingStatus defines the observed state of
              VerrazzanoFleetBinding.
            properties:
              conditions:
                description: Conditions defines current state of the VerrazzanoFleetBinding.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              revision:
                description: Revision is the current revision of the Helm release.
                type: integer
              status:
                description: Status is the current status of the Helm release.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
