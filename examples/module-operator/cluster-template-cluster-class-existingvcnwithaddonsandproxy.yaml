# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: ${CLUSTER_NAMESPACE}
  name: ${CLUSTER_NAMESPACE}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
  name: ${CLUSTER_NAME}
  namespace: ${CLUSTER_NAMESPACE}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - ${POD_CIDR=192.168.0.0/16}
    serviceDomain: cluster.local
    services:
      cidrBlocks:
        - ${CLUSTER_CIDR=10.128.0.0/12}
  topology:
    class: ${CLUSTER_NAME}-cluster-class
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT=1}
    version: ${KUBERNETES_VERSION=v1.25.7}
    variables:
      - name: moduleOperatorEnabled
        value: true
      - name: verrazzanoPlatformOperatorEnabled
        value: true
    workers:
      machineDeployments:
        - class: ${CLUSTER_NAME}-md-0-class
          name: ${CLUSTER_NAME}-md-0
          replicas: ${NODE_MACHINE_COUNT=1}
        - class: ${CLUSTER_NAME}-md-1-class
          name: ${CLUSTER_NAME}-md-1
          replicas: ${NODE_MACHINE_COUNT=1}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: ${CLUSTER_NAME}-cluster-class
  namespace: ${CLUSTER_NAMESPACE}
  labels:
    cluster.x-k8s.io/provider: oci
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
      kind: OCNEControlPlaneTemplate
      name: ${CLUSTER_NAME}-control-plane-template
      namespace: ${CLUSTER_NAMESPACE}
    machineInfrastructure:
      ref:
        kind: OCIMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        name: ${CLUSTER_NAME}-control-plane-machine-template
        namespace: ${CLUSTER_NAMESPACE}
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OCIClusterTemplate
      name: ${CLUSTER_NAME}-cluster-template
      namespace: ${CLUSTER_NAMESPACE}
  workers:
    machineDeployments:
      - class: ${CLUSTER_NAME}-md-0-class
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
              kind: OCNEConfigTemplate
              name: ${CLUSTER_NAME}-md-0-template
              namespace: ${CLUSTER_NAMESPACE}
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: OCIMachineTemplate
              name: ${CLUSTER_NAME}-md-0-machine-template
              namespace: ${CLUSTER_NAMESPACE}
      - class: ${CLUSTER_NAME}-md-1-class
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
              kind: OCNEConfigTemplate
              name: ${CLUSTER_NAME}-md-1-template
              namespace: ${CLUSTER_NAMESPACE}
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: OCIMachineTemplate
              name: ${CLUSTER_NAME}-md-1-machine-template
              namespace: ${CLUSTER_NAMESPACE}
  variables:
    - name: moduleOperatorEnabled
      required: false
      schema:
        openAPIV3Schema:
          type: boolean
          description: Flag to enable Module Operator.
          default: true
          example: true
    - name: verrazzanoPlatformOperatorEnabled
      required: false
      schema:
        openAPIV3Schema:
          type: boolean
          description: Flag to enable VPO.
          default: true
          example: true
  patches:
    - name: moduleOperatorEnabled
      definitions:
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
            kind: OCNEControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/moduleOperator/enabled
              valueFrom:
                variable: moduleOperatorEnabled
    - name: verrazzanoPlatformOperatorEnabled
      definitions:
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
            kind: OCNEControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
            - op: replace
              path: /spec/template/spec/verrazzanoPlatformOperator/enabled
              valueFrom:
                variable: verrazzanoPlatformOperatorEnabled
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CLUSTER_NAME}-user-credentials
  namespace: ${CLUSTER_NAMESPACE}
type: Opaque
data:
  tenancy: ${OCI_TENANCY_ID_B64}
  user: ${OCI_USER_ID_B64}
  key: ${OCI_CREDENTIALS_KEY_B64}
  fingerprint: ${OCI_CREDENTIALS_FINGERPRINT_B64}
  passphrase: ""
  region: ${OCI_REGION_B64}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIClusterIdentity
metadata:
  name: ${CLUSTER_NAME}-cluster-identity
  namespace: ${CLUSTER_NAMESPACE}
spec:
  type: UserPrincipal
  principalSecret:
    name: ${CLUSTER_NAME}-user-credentials
    namespace: ${CLUSTER_NAMESPACE}
  allowedNamespaces: {}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIClusterTemplate
metadata:
  name: ${CLUSTER_NAME}-cluster
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      compartmentId: ${OCI_COMPARTMENT_ID}
      identityRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: OCIClusterIdentity
        name: ${CLUSTER_NAME}-cluster-identity
        namespace: ${NAMESPACE}
      networkSpec:
        skipNetworkManagement: true
        vcn:
          id: ${OCI_VCN_ID}
          subnets:
            - id: ${OCI_SUBNET_ID}
              role: control-plane-endpoint
              name: control-plane-endpoint
              cidr: ${OCI_SUBNET_CIDR}
              type: private
            - id: ${OCI_SUBNET_ID}
              role: control-plane
              name: control-plane
              cidr: ${OCI_SUBNET_CIDR}
              type: private
            - id: ${OCI_SUBNET_ID}
              role: worker
              name: worker
              cidr: ${OCI_SUBNET_CIDR}
              type: private
---
kind: OCNEControlPlaneTemplate
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
metadata:
  name: ${CLUSTER_NAME}-control-plane-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      moduleOperator:
        enabled: true
      verrazzanoPlatformOperator:
        enabled: true
        imagePullSecrets:
          - name: ${IMAGE_PULL_SECRET=verrazzano-container-registry}
        image:
          repository: ${VPO_IMAGE}
          tag: ${VPO_TAG}
      controlPlaneConfig:
        clusterConfiguration:
          apiServer:
            certSANs:
              - localhost
              - 127.0.0.1
          dns:
            imageRepository: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}/${OCNE_IMAGE_PATH=olcne}
            imageTag: ${DNS_TAG=v1.9.3}
          etcd:
            local:
              imageRepository: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}/${OCNE_IMAGE_PATH=olcne}
              imageTag: ${ETCD_TAG=3.5.6}
          networking: {}
          scheduler: {}
          imageRepository: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}/${OCNE_IMAGE_PATH=olcne}
        initConfiguration:
          nodeRegistration:
            criSocket: /var/run/crio/crio.sock
            kubeletExtraArgs:
              cloud-provider: external
              provider-id: oci://{{ ds["id"] }}
        joinConfiguration:
          discovery: {}
          nodeRegistration:
            criSocket: /var/run/crio/crio.sock
            kubeletExtraArgs:
              cloud-provider: external
              provider-id: oci://{{ ds["id"] }}
        imageConfiguration:
          proxy:
            httpProxy: "${NETWORK_PROXY}"
            httpsProxy: "${NETWORK_PROXY}"
            noProxy: "${POD_CIDR=192.168.0.0/16},${CLUSTER_CIDR=10.128.0.0/12}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane-machine-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      bootVolumeSizeInGBs: "${OCI_NODE_BOOT_VOLUME=100}"
      compartmentId: ${OCI_COMPARTMENT_ID}
      imageId: ${OCI_IMAGE_ID}
      isPvEncryptionInTransitEnabled: ${OCI_NODE_PV_TRANSIT_ENCRYPTION=false}
      metadata:
        ssh_authorized_keys: ${OCI_SSH_KEY}
      shape: ${OCI_NODE_MACHINE_TYPE=VM.Standard.E4.Flex}
      shapeConfig:
        ocpus: "${OCI_NODE_MACHINE_TYPE_OCPUS=4}"
        memoryInGBs: "${OCI_NODE_MACHINE_MEMORY_GBS=80}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0-machine-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      bootVolumeSizeInGBs: "${OCI_NODE_BOOT_VOLUME=100}"
      compartmentId: ${OCI_COMPARTMENT_ID}
      imageId: ${OCI_IMAGE_ID}
      isPvEncryptionInTransitEnabled: ${OCI_NODE_PV_TRANSIT_ENCRYPTION=false}
      metadata:
        ssh_authorized_keys: ${OCI_SSH_KEY}
      shape: ${OCI_NODE_MACHINE_TYPE=VM.Standard.E4.Flex}
      shapeConfig:
        ocpus: "${OCI_NODE_MACHINE_TYPE_OCPUS=4}"
        memoryInGBs: "${OCI_NODE_MACHINE_MEMORY_GBS=80}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-1-machine-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      bootVolumeSizeInGBs: "${OCI_NODE_BOOT_VOLUME=100}"
      compartmentId: ${OCI_COMPARTMENT_ID}
      imageId: ${OCI_IMAGE_ID}
      isPvEncryptionInTransitEnabled: ${OCI_NODE_PV_TRANSIT_ENCRYPTION=false}
      metadata:
        ssh_authorized_keys: ${OCI_SSH_KEY}
      shape: ${OCI_NODE_MACHINE_TYPE=VM.Standard.E4.Flex}
      shapeConfig:
        ocpus: "${OCI_NODE_MACHINE_TYPE_OCPUS=4}"
        memoryInGBs: "${OCI_NODE_MACHINE_MEMORY_GBS=80}"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: OCNEConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      clusterConfiguration:
        imageRepository: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}/${OCNE_IMAGE_PATH=olcne}
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: oci://{{ ds["id"] }}
      imageConfiguration:
        proxy:
          httpProxy: "${NETWORK_PROXY}"
          httpsProxy: "${NETWORK_PROXY}"
          noProxy: "${POD_CIDR=192.168.0.0/16},${CLUSTER_CIDR=10.128.0.0/12}"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: OCNEConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-1-template
  namespace: ${CLUSTER_NAMESPACE}
spec:
  template:
    spec:
      clusterConfiguration:
        imageRepository: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}/${OCNE_IMAGE_PATH=olcne}
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: oci://{{ ds["id"] }}
      imageConfiguration:
        proxy:
          httpProxy: "${NETWORK_PROXY}"
          httpsProxy: "${NETWORK_PROXY}"
          noProxy: "${POD_CIDR=192.168.0.0/16},${CLUSTER_CIDR=10.128.0.0/12}"
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: ${CLUSTER_NAME}-workload-cluster-resources
  namespace: ${NAMESPACE}
spec:
  clusterSelector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
  resources:
    - kind: Secret
      name: ${CLUSTER_NAME}-oci-cloud-controller-manager
    - kind: Secret
      name: ${CLUSTER_NAME}-oci-csi
    - kind: ConfigMap
      name: ${CLUSTER_NAME}-ccm-module-cr
    - kind: ConfigMap
      name: ${CLUSTER_NAME}-calico-module-cr
  strategy: Reconcile
---
apiVersion: v1
stringData:
  cloud-controller-manager.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: oci-cloud-controller-manager
      namespace: kube-system
    stringData:
      cloud-provider.yaml: |-
        auth:
          region: ${OCI_REGION}
          tenancy: ${OCI_TENANCY_ID}
          compartment: ${OCI_COMPARTMENT_ID}
          user: ${OCI_USER_ID}
          key: "${OCI_CREDENTIALS_KEY}"
          fingerprint: ${OCI_CREDENTIALS_FINGERPRINT}
          key_passphrase: 
        vcn: ${OCI_VCN_ID}
        loadBalancer:
          subnet1: ${OCI_SUBNET_ID}
          securityListManagementMode: All
          disableSecurityListManagement: false
        useInstancePrincipals: false
        # compartment configures Compartment within which the cluster resides.
        compartment: ${OCI_COMPARTMENT_ID}
        # Optional rate limit controls for accessing OCI API
        rateLimiter:
          rateLimitQPSRead: 20.0
          rateLimitBucketRead: 5
          rateLimitQPSWrite: 20.0
          rateLimitBucketWrite: 5
kind: Secret
type: addons.cluster.x-k8s.io/resource-set
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: ${CLUSTER_NAME}-oci-cloud-controller-manager
  namespace: ${NAMESPACE}
---
apiVersion: v1
stringData:
  csi.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: oci-volume-provisioner
      namespace: kube-system
    stringData:
      config.yaml: |-
        auth:
          region: ${OCI_REGION}
          tenancy: ${OCI_TENANCY_ID}
          compartment: ${OCI_COMPARTMENT_ID}
          user: ${OCI_USER_ID}
          key: "${OCI_CREDENTIALS_KEY}"
          fingerprint: ${OCI_CREDENTIALS_FINGERPRINT}
          key_passphrase:
        vcn: ${OCI_VCN_ID}
        loadBalancer: 
          subnet1: ${OCI_SUBNET_ID}
          securityListManagementMode: All
          disableSecurityListManagement: false 
        useInstancePrincipals: false
        # compartment configures Compartment within which the cluster resides.
        compartment: ${OCI_COMPARTMENT_ID}
        # Optional rate limit controls for accessing OCI API
        rateLimiter:
          rateLimitQPSRead: 20.0
          rateLimitBucketRead: 5
          rateLimitQPSWrite: 20.0
          rateLimitBucketWrite: 5
kind: Secret
type: addons.cluster.x-k8s.io/resource-set
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: ${CLUSTER_NAME}-oci-csi
  namespace: ${NAMESPACE}
---
apiVersion: v1
data:
  ccm-module.yaml: |
    apiVersion: platform.verrazzano.io/v1alpha1
    kind: Module
    metadata:
      name: oci-ccm
      namespace: default
    spec:
      moduleName: oci-ccm
      targetNamespace: kube-system
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: ${CLUSTER_NAME}-ccm-module-cr
  namespace: ${NAMESPACE}
---
apiVersion: v1
data:
  calico.yaml: |
    apiVersion: platform.verrazzano.io/v1alpha1
    kind: Module
    metadata:
      name: calico
      namespace: default
    spec:
      moduleName: calico
      targetNamespace: default
      values:
        tigeraOperator:
          version: ${TIGERA_TAG=v1.29.0}
        installation:
          cni:
            type: Calico
          calicoNetwork:
            bgp: Disabled
            ipPools:
              - cidr: ${POD_CIDR=192.168.0.0/16}
                encapsulation: VXLAN
          registry: ${OCNE_IMAGE_REPOSITORY=container-registry.oracle.com}
          imagePath: ${OCNE_IMAGE_PATH=olcne}
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: ${CLUSTER_NAME}-calico-module-cr
  namespace: ${NAMESPACE}